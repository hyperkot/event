/// <reference path="../typings/index.d.ts"/>
Object.defineProperty(exports, "__esModule", { value: true });
const event_1 = require("./event");
/**
 * Represents a model of a single property of type T.
 * - Property can be retrieved/changed by using the .value property of the beacon.
 * - Setting new value to the property will trigger the 'changed' event
 *
 */
class Beacon {
    constructor(value) {
        this._changed = new event_1.default();
        this._isAssigned = false;
        this.changed.first.then(() => { this._isAssigned = true; });
        if (arguments.length === 1)
            this.value = value;
    }
    get changed() { return this._changed; }
    ;
    get priorValue() { return this._priorValue; }
    get value() { return this._value; }
    set value(value) {
        if (this.value !== value) {
            this._priorValue = this.value;
            this.value = value;
            this._changed.emit(this._value);
        }
    }
    get isAssigned() { return this._isAssigned; }
    syncTo(other) {
        other.changed.on(() => {
            if (this.value !== other.value) {
                this.value = other.value;
            }
        });
        this.changed.on(() => {
            if (other.value !== this.value) {
                other.value = this.value;
            }
        });
        this.value = other.value;
    }
    toString() {
        return JSON.stringify(this.value, null, "\t");
    }
    valueOf() {
        return this.value.valueOf();
    }
    fromString(str) {
        this.value = JSON.parse(str);
    }
}
exports.Beacon = Beacon;
exports.default = Beacon;
let Î» = 1;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmVhY29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2JlYWNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw2Q0FBNkM7O0FBRTdDLG1DQUE0QjtBQUU1Qjs7Ozs7R0FLRztBQUNIO0lBcUJJLFlBQVksS0FBUztRQW5CYixhQUFRLEdBQWEsSUFBSSxlQUFLLEVBQUssQ0FBQztRQWdCcEMsZ0JBQVcsR0FBWSxLQUFLLENBQUM7UUFJakMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLFFBQU8sSUFBSSxDQUFDLFdBQVcsR0FBRyxJQUFJLENBQUMsQ0FBQSxDQUFDLENBQUMsQ0FBQztRQUMxRCxFQUFFLENBQUMsQ0FBQyxTQUFTLENBQUMsTUFBTSxLQUFLLENBQUMsQ0FBQztZQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO0lBQ25ELENBQUM7SUFyQkQsSUFBVyxPQUFPLEtBQXVCLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztJQUFBLENBQUM7SUFHakUsSUFBSSxVQUFVLEtBQVEsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0lBR2hELElBQUksS0FBSyxLQUFRLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUN0QyxJQUFJLEtBQUssQ0FBQyxLQUFRO1FBQ2QsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3ZCLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUM5QixJQUFJLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztZQUNuQixJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDcEMsQ0FBQztJQUNMLENBQUM7SUFHRCxJQUFJLFVBQVUsS0FBYyxNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7SUFPdEQsTUFBTSxDQUFDLEtBQWdCO1FBQ25CLEtBQUssQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1lBQ2IsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLEtBQUssS0FBSyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsS0FBSyxDQUFDO1lBQzdCLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDO1lBQ1osRUFBRSxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssS0FBSyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQztnQkFDN0IsS0FBSyxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDO1lBQzdCLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUM3QixDQUFDO0lBRUQsUUFBUTtRQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ2xELENBQUM7SUFFRCxPQUFPO1FBQ0gsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDaEMsQ0FBQztJQUVELFVBQVUsQ0FBQyxHQUFXO1FBQ2xCLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqQyxDQUFDO0NBQ0o7QUFuREQsd0JBbURDO0FBRUQsa0JBQWUsTUFBTSxDQUFDO0FBQUEsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8vIDxyZWZlcmVuY2UgcGF0aD1cIi4uL3R5cGluZ3MvaW5kZXguZC50c1wiLz5cblxuaW1wb3J0IEV2ZW50IGZyb20gXCIuL2V2ZW50XCI7XG5cbi8qKlxuICogUmVwcmVzZW50cyBhIG1vZGVsIG9mIGEgc2luZ2xlIHByb3BlcnR5IG9mIHR5cGUgVC5cbiAqIC0gUHJvcGVydHkgY2FuIGJlIHJldHJpZXZlZC9jaGFuZ2VkIGJ5IHVzaW5nIHRoZSAudmFsdWUgcHJvcGVydHkgb2YgdGhlIGJlYWNvbi5cbiAqIC0gU2V0dGluZyBuZXcgdmFsdWUgdG8gdGhlIHByb3BlcnR5IHdpbGwgdHJpZ2dlciB0aGUgJ2NoYW5nZWQnIGV2ZW50XG4gKlxuICovXG5leHBvcnQgY2xhc3MgQmVhY29uPFQ+IHtcblxuICAgIHByaXZhdGUgX2NoYW5nZWQ6IEV2ZW50PFQ+ID0gbmV3IEV2ZW50PFQ+KCk7XG4gICAgcHVibGljIGdldCBjaGFuZ2VkKCk6IEV2ZW50LkVtaXR0ZXI8VD4geyByZXR1cm4gdGhpcy5fY2hhbmdlZDsgfTtcblxuICAgIHByaXZhdGUgX3ByaW9yVmFsdWU6IFQ7XG4gICAgZ2V0IHByaW9yVmFsdWUoKTogVCB7IHJldHVybiB0aGlzLl9wcmlvclZhbHVlOyB9XG5cbiAgICBwcml2YXRlIF92YWx1ZTogVDtcbiAgICBnZXQgdmFsdWUoKTogVCB7IHJldHVybiB0aGlzLl92YWx1ZTsgfVxuICAgIHNldCB2YWx1ZSh2YWx1ZTogVCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSAhPT0gdmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMuX3ByaW9yVmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHZhbHVlO1xuICAgICAgICAgICAgdGhpcy5fY2hhbmdlZC5lbWl0KHRoaXMuX3ZhbHVlKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHByaXZhdGUgX2lzQXNzaWduZWQ6IGJvb2xlYW4gPSBmYWxzZTtcbiAgICBnZXQgaXNBc3NpZ25lZCgpOiBib29sZWFuIHsgcmV0dXJuIHRoaXMuX2lzQXNzaWduZWQ7IH1cblxuICAgIGNvbnN0cnVjdG9yKHZhbHVlPzogVCkge1xuICAgICAgICB0aGlzLmNoYW5nZWQuZmlyc3QudGhlbigoKSA9PiB7dGhpcy5faXNBc3NpZ25lZCA9IHRydWU7fSk7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB0aGlzLnZhbHVlID0gdmFsdWU7XG4gICAgfVxuXG4gICAgc3luY1RvKG90aGVyOiBCZWFjb248VD4pIHtcbiAgICAgICAgb3RoZXIuY2hhbmdlZC5vbigoKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy52YWx1ZSAhPT0gb3RoZXIudmFsdWUpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gb3RoZXIudmFsdWU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLmNoYW5nZWQub24oKCkgPT4ge1xuICAgICAgICAgICAgaWYgKG90aGVyLnZhbHVlICE9PSB0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgb3RoZXIudmFsdWUgPSB0aGlzLnZhbHVlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IG90aGVyLnZhbHVlO1xuICAgIH1cblxuICAgIHRvU3RyaW5nKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeSh0aGlzLnZhbHVlLCBudWxsLCBcIlxcdFwiKTtcbiAgICB9XG5cbiAgICB2YWx1ZU9mKCk6IGFueSB7XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlLnZhbHVlT2YoKTtcbiAgICB9XG5cbiAgICBmcm9tU3RyaW5nKHN0cjogc3RyaW5nKSB7XG4gICAgICAgIHRoaXMudmFsdWUgPSBKU09OLnBhcnNlKHN0cik7XG4gICAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBCZWFjb247bGV0IM67ID0gMTsiXX0=